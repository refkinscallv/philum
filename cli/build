<?php

/**
 * Philum
 * Traditional PHP Framework with MVC Architecture, Routing and Query Builder
 * 
 * (c) Callv Group 2024
 */

if (PHP_SAPI !== 'cli') {
    die("This script must be run from the command line.");
}

const ANSI_COLOR_BLUE = "\033[0;34m";
const ANSI_COLOR_GREEN = "\033[0;32m";
const ANSI_COLOR_RED = "\033[0;31m";
const ANSI_COLOR_RESET = "\033[0m";

function runCommand(string $command, string $successMessage, string $failureMessage): int {
    echo "$command...\n";
    passthru($command, $status);
    if ($status === 0) {
        echo ANSI_COLOR_GREEN . "$successMessage" . ANSI_COLOR_RESET . "\n";
    } else {
        echo ANSI_COLOR_RED . "$failureMessage" . ANSI_COLOR_RESET . "\n";
        exit($status);
    }
    return $status;
}

function createHtaccessFile(): void {
    $htaccessContent = <<<'HTACCESS'
<IfModule authz_core_module>
    Require all denied
</IfModule>
<IfModule !authz_core_module>
    Deny from all
</IfModule>
HTACCESS;

    $filePath = 'vendor/.htaccess';
    if (file_put_contents($filePath, $htaccessContent) !== false) {
        echo ANSI_COLOR_GREEN . ".htaccess file created successfully in vendor directory." . ANSI_COLOR_RESET . "\n";
    } else {
        echo ANSI_COLOR_RED . "Failed to create .htaccess file in vendor directory." . ANSI_COLOR_RESET . "\n";
        exit(1);
    }
}

function generateGraffiti() {
    $art = <<<ASCII
 ____  _     _ _                 
|  _ \| |__ (_) |_   _ _ __ ___  
| |_) | '_ \| | | | | | '_ ` _ \ 
|  __/| | | | | | |_| | | | | | |
|_|   |_| |_|_|_|\__,_|_| |_| |_|
ASCII;

    $lines = explode("\n", $art);

    foreach ($lines as $line) {
        echo ANSI_COLOR_BLUE . $line . ANSI_COLOR_RESET . "\n";
    }
}

function main(): void {
    echo ANSI_COLOR_BLUE . "[Philum] Build Application" . ANSI_COLOR_RESET . "\n";
    generateGraffiti();
    echo ANSI_COLOR_BLUE . "Philum 1.0-dev" . ANSI_COLOR_RESET . "\n";
    echo ANSI_COLOR_BLUE . "Traditional PHP Framework with MVC Architecture, Routing and Query Builder" . ANSI_COLOR_RESET . "\n";
    echo ANSI_COLOR_BLUE . "(c) Callv Group 2024" . ANSI_COLOR_RESET . "\n";

    if (!file_exists('.env')) {
        runCommand(
            'cp .env.example .env',
            '[Philum] .env file created successfully.',
            '[Philum] Failed to create .env file.'
        );
    } else {
        echo ANSI_COLOR_GREEN . "[Philum] .env file already exists." . ANSI_COLOR_RESET . "\n";
    }

    runCommand(
        'composer install',
        '[Philum] Composer install successfully.',
        '[Philum] Composer install failed.'
    );

    runCommand(
        'composer dump-autoload',
        '[Philum] Composer dump-autoload successfully.',
        '[Philum] Composer dump-autoload failed.'
    );

    createHtaccessFile();
}

main();
